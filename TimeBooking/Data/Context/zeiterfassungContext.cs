// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using TimeBooking.Data.Models;

namespace TimeBooking.Data.Context
{
    public partial class zeiterfassungContext : DbContext
    {
        public zeiterfassungContext()
        {
        }

        public zeiterfassungContext(DbContextOptions<zeiterfassungContext> options)
            : base(options)
        {
        }

        public virtual DbSet<AktiveKunden> AktiveKundens { get; set; }
        public virtual DbSet<AktiveProjekte> AktiveProjektes { get; set; }
        public virtual DbSet<AktiveVorgaenge> AktiveVorgaenges { get; set; }
        public virtual DbSet<Arbeitszeit> Arbeitszeits { get; set; }
        public virtual DbSet<ArbeitszeitReduktion> ArbeitszeitReduktions { get; set; }
        public virtual DbSet<Buchung> Buchungs { get; set; }
        public virtual DbSet<FerienArbeitspensum> FerienArbeitspensums { get; set; }
        public virtual DbSet<InaktiveKunden> InaktiveKundens { get; set; }
        public virtual DbSet<InaktiveProjekte> InaktiveProjektes { get; set; }
        public virtual DbSet<InaktiveVorgaenge> InaktiveVorgaenges { get; set; }
        public virtual DbSet<Kunde> Kundes { get; set; }
        public virtual DbSet<Mitarbeiter> Mitarbeiters { get; set; }
        public virtual DbSet<MitarbeiterSaldo> MitarbeiterSaldos { get; set; }
        public virtual DbSet<Projekt> Projekts { get; set; }
        public virtual DbSet<Spesen> Spesens { get; set; }
        public virtual DbSet<T_Log> T_Logs { get; set; }
        public virtual DbSet<Vorgang> Vorgangs { get; set; }

      

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("Latin1_General_CI_AS");

            modelBuilder.Entity<AktiveKunden>(entity =>
            {
                entity.ToView("AktiveKunden");
            });

            modelBuilder.Entity<AktiveProjekte>(entity =>
            {
                entity.ToView("AktiveProjekte");
            });

            modelBuilder.Entity<AktiveVorgaenge>(entity =>
            {
                entity.ToView("AktiveVorgaenge");
            });

            modelBuilder.Entity<Arbeitszeit>(entity =>
            {
                entity.Property(e => e.ArbeitszeitId).HasDefaultValueSql("(newid())");

                entity.Property(e => e.Tagesarbeitszeit).HasDefaultValueSql("((8))");
            });

            modelBuilder.Entity<ArbeitszeitReduktion>(entity =>
            {
                entity.Property(e => e.ReduktionId).HasDefaultValueSql("(newid())");
            });

            modelBuilder.Entity<Buchung>(entity =>
            {
                entity.Property(e => e.BuchungId).ValueGeneratedNever();

                entity.HasOne(d => d.Mitarbeiter)
                    .WithMany(p => p.Buchungs)
                    .HasForeignKey(d => d.MitarbeiterId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Buchung_Mitarbeiter");

                entity.HasOne(d => d.Vorgang)
                    .WithMany(p => p.Buchungs)
                    .HasForeignKey(d => d.VorgangId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Buchung_Vorgang");
            });

            modelBuilder.Entity<FerienArbeitspensum>(entity =>
            {
                entity.Property(e => e.FerienArbeitspensumId).ValueGeneratedNever();

                entity.Property(e => e.Arbeitspensum).HasDefaultValueSql("((100))");

                entity.Property(e => e.Dienstag).HasDefaultValueSql("((1))");

                entity.Property(e => e.Donnerstag).HasDefaultValueSql("((1))");

                entity.Property(e => e.FerienProJahr).HasDefaultValueSql("((25))");

                entity.Property(e => e.Freitag).HasDefaultValueSql("((1))");

                entity.Property(e => e.Mittwoch).HasDefaultValueSql("((1))");

                entity.Property(e => e.Montag).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Mitarbeiter)
                    .WithMany(p => p.FerienArbeitspensums)
                    .HasForeignKey(d => d.MitarbeiterId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_FerienArbeitspensum_Mitarbeiter");
            });

            modelBuilder.Entity<InaktiveKunden>(entity =>
            {
                entity.ToView("InaktiveKunden");
            });

            modelBuilder.Entity<InaktiveProjekte>(entity =>
            {
                entity.ToView("InaktiveProjekte");
            });

            modelBuilder.Entity<InaktiveVorgaenge>(entity =>
            {
                entity.ToView("InaktiveVorgaenge");
            });

            modelBuilder.Entity<Kunde>(entity =>
            {
                entity.Property(e => e.KundeId).ValueGeneratedNever();

                entity.Property(e => e.Aktiv).HasDefaultValueSql("((1))");
            });

            modelBuilder.Entity<Mitarbeiter>(entity =>
            {
                entity.Property(e => e.MitarbeiterId).ValueGeneratedNever();
            });

            modelBuilder.Entity<MitarbeiterSaldo>(entity =>
            {
                entity.Property(e => e.MitarbeiterSaldoId).HasDefaultValueSql("(newid())");
            });

            modelBuilder.Entity<Projekt>(entity =>
            {
                entity.Property(e => e.ProjektId).ValueGeneratedNever();

                entity.Property(e => e.Aktiv).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Kunde)
                    .WithMany(p => p.Projekts)
                    .HasForeignKey(d => d.KundeId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Projekt_Kunde");
            });

            modelBuilder.Entity<Spesen>(entity =>
            {
                entity.Property(e => e.SpesenId).ValueGeneratedNever();

                entity.HasOne(d => d.Mitarbeiter)
                    .WithMany(p => p.Spesens)
                    .HasForeignKey(d => d.MitarbeiterId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Spesen_Mitarbeiter");
            });

            modelBuilder.Entity<Vorgang>(entity =>
            {
                entity.Property(e => e.VorgangId).ValueGeneratedNever();

                entity.Property(e => e.Aktiv).HasDefaultValueSql("((1))");

                entity.HasOne(d => d.Projekt)
                    .WithMany(p => p.Vorgangs)
                    .HasForeignKey(d => d.ProjektId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Vorgang_Projekt");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}